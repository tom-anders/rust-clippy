error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:27:14
   |
LL |     let foo: &Box<bool>;
   |              ^^^^^^^^^^ help: try: `&bool`
   |
note: the lint level is defined here
  --> tests/ui/borrow_box.rs:1:9
   |
LL | #![deny(clippy::borrowed_box)]
   |         ^^^^^^^^^^^^^^^^^^^^

error: you seem to be trying to use `&Option<T>`. Consider using `Option<&T>` instead
  --> tests/ui/borrow_box.rs:29:14
   |
LL |     let bar: &Option<bool>;
   |              ^^^^^^^^^^^^^ help: try: `Option<&bool>`
   |
   = note: `-D clippy::borrowed-option` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::borrowed_option)]`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:34:10
   |
LL |     foo: &'a Box<bool>,
   |          ^^^^^^^^^^^^^ help: try: `&'a bool`

error: you seem to be trying to use `&Option<T>`. Consider using `Option<&T>` instead
  --> tests/ui/borrow_box.rs:36:10
   |
LL |     bar: &'a Option<bool>,
   |          ^^^^^^^^^^^^^^^^ help: try: `Option<&'a bool>`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:41:17
   |
LL |     fn test4(a: &Box<bool>, b: &Option<bool>);
   |                 ^^^^^^^^^^ help: try: `&bool`

error: you seem to be trying to use `&Option<T>`. Consider using `Option<&T>` instead
  --> tests/ui/borrow_box.rs:41:32
   |
LL |     fn test4(a: &Box<bool>, b: &Option<bool>);
   |                                ^^^^^^^^^^^^^ help: try: `Option<&bool>`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:109:25
   |
LL | pub fn test14(_display: &Box<dyn Display>) {}
   |                         ^^^^^^^^^^^^^^^^^ help: try: `&dyn Display`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:111:25
   |
LL | pub fn test15(_display: &Box<dyn Display + Send>) {}
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(dyn Display + Send)`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:113:29
   |
LL | pub fn test16<'a>(_display: &'a Box<dyn Display + 'a>) {}
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'a (dyn Display + 'a)`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:116:25
   |
LL | pub fn test17(_display: &Box<impl Display>, _display2: &Option<impl Display>) {}
   |                         ^^^^^^^^^^^^^^^^^^ help: try: `&impl Display`

error: you seem to be trying to use `&Option<T>`. Consider using `Option<&T>` instead
  --> tests/ui/borrow_box.rs:116:56
   |
LL | pub fn test17(_display: &Box<impl Display>, _display2: &Option<impl Display>) {}
   |                                                        ^^^^^^^^^^^^^^^^^^^^^ help: try: `Option<&impl Display>`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:119:25
   |
LL | pub fn test18(_display: &Box<impl Display + Send>, _display2: &Option<impl Display + Send>) {}
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(impl Display + Send)`

error: you seem to be trying to use `&Option<T>`. Consider using `Option<&T>` instead
  --> tests/ui/borrow_box.rs:119:63
   |
LL | pub fn test18(_display: &Box<impl Display + Send>, _display2: &Option<impl Display + Send>) {}
   |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Option<&(impl Display + Send)>`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:122:29
   |
LL | pub fn test19<'a>(_display: &'a Box<impl Display + 'a>, _display2: &'a Option<impl Display + 'a>) {}
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'a (impl Display + 'a)`

error: you seem to be trying to use `&Option<T>`. Consider using `Option<&T>` instead
  --> tests/ui/borrow_box.rs:122:68
   |
LL | pub fn test19<'a>(_display: &'a Box<impl Display + 'a>, _display2: &'a Option<impl Display + 'a>) {}
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Option<&'a (impl Display + 'a)>`

error: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> tests/ui/borrow_box.rs:129:25
   |
LL | pub fn test20(_display: &Box<(dyn Display + Send)>) {}
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(dyn Display + Send)`

error: aborting due to 16 previous errors

